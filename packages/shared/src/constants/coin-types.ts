import type { TValueLabelRecord } from '../types';

export const COIN_TYPE_ENUM = {
  regular_commission: 'regular_commission',
  business_commission: 'business_commission',
  regular_gate_commission: 'regular_gate_commission',
  business_gate_commission: 'business_gate_commission',
  gate: 'gate',
  reserve: 'reserve',
  prepaid: 'prepaid',
  credit: 'credit',
  deposit: 'deposit',
  deposit_accrued: 'deposit_accrued',
  client: 'client',
  cash: 'cash',
  cashback_merchant: 'cashback_merchant',
  cashback_payer: 'cashback_payer',
  debt: 'debt',
  merchant_operational: 'merchant_operational',
  merchant_reserve: 'merchant_reserve',
  vat: 'vat',
  system_vat: 'system_vat',
  provider_vat: 'provider_vat',
  internal_client: 'internal_client',
  merchant_reserve_debt: 'merchant_reserve_debt',
  payment_in_advance: 'payment_in_advance',
  charge_back: 'charge_back',
  exchange_reserve: 'exchange_reserve',
  technical_transit: 'technical_transit',
  issuing_balance: 'issuing_balance',
  debt_gate_commission: 'debt_gate_commission',
  debt_gate_settlement: 'debt_gate_settlement',
  business_system_commission: 'business_system_commission',
  regular_system_commission: 'regular_system_commission',
  issuing_transit: 'issuing_transit',
} as const;

export const COIN_TYPES: Record<TCoinType, string> = {
  [COIN_TYPE_ENUM.regular_commission]: 'entity.coin_types.regular_commission',
  [COIN_TYPE_ENUM.business_commission]: 'entity.coin_types.business_commission',
  [COIN_TYPE_ENUM.regular_gate_commission]: 'entity.coin_types.regular_gate_commission',
  [COIN_TYPE_ENUM.business_gate_commission]: 'entity.coin_types.business_gate_commission',
  [COIN_TYPE_ENUM.gate]: 'entity.coin_types.gate',
  [COIN_TYPE_ENUM.reserve]: 'entity.coin_types.reserve',
  [COIN_TYPE_ENUM.prepaid]: 'entity.coin_types.prepaid',
  [COIN_TYPE_ENUM.credit]: 'entity.coin_types.credit',
  [COIN_TYPE_ENUM.deposit]: 'entity.coin_types.deposit',
  [COIN_TYPE_ENUM.deposit_accrued]: 'entity.coin_types.deposit_accrued',
  [COIN_TYPE_ENUM.client]: 'entity.coin_types.client',
  [COIN_TYPE_ENUM.cash]: 'entity.coin_types.cash',
  [COIN_TYPE_ENUM.cashback_merchant]: 'entity.coin_types.cashback_merchant',
  [COIN_TYPE_ENUM.cashback_payer]: 'entity.coin_types.cashback_payer',
  [COIN_TYPE_ENUM.debt]: 'entity.coin_types.debt',
  [COIN_TYPE_ENUM.merchant_operational]: 'entity.coin_types.merchant_operational',
  [COIN_TYPE_ENUM.merchant_reserve]: 'entity.coin_types.merchant_reserve',
  [COIN_TYPE_ENUM.vat]: 'entity.coin_types.vat',
  [COIN_TYPE_ENUM.system_vat]: 'entity.coin_types.system_vat',
  [COIN_TYPE_ENUM.provider_vat]: 'entity.coin_types.provider_vat',
  [COIN_TYPE_ENUM.internal_client]: 'entity.coin_types.internal_client',
  [COIN_TYPE_ENUM.merchant_reserve_debt]: 'entity.coin_types.merchant_reserve_debt',
  [COIN_TYPE_ENUM.payment_in_advance]: 'entity.coin_types.payment_in_advance',
  [COIN_TYPE_ENUM.charge_back]: 'entity.coin_types.charge_back',
  [COIN_TYPE_ENUM.exchange_reserve]: 'entity.coin_types.exchange_reserve',
  [COIN_TYPE_ENUM.technical_transit]: 'entity.coin_types.technical_transit',
  [COIN_TYPE_ENUM.issuing_balance]: 'entity.coin_types.issuing_balance',
  [COIN_TYPE_ENUM.debt_gate_commission]: 'entity.coin_types.debt_gate_commission',
  [COIN_TYPE_ENUM.debt_gate_settlement]: 'entity.coin_types.debt_gate_settlement',
  [COIN_TYPE_ENUM.business_system_commission]: 'entity.coin_types.business_system_commission',
  [COIN_TYPE_ENUM.regular_system_commission]: 'entity.coin_types.regular_system_commission',
  [COIN_TYPE_ENUM.issuing_transit]: 'entity.coin_types.issuing_transit',
};

export const COIN_TYPES_ARRAY: TValueLabelRecord[] = Object.entries(COIN_TYPES).map(([key, label]) => ({
  value: key,
  label,
}));

export type TCoinType = keyof typeof COIN_TYPE_ENUM;
