import { ITableFilter } from '@/types/interfaces/TableFilters.interface';

export const transactionsFilters: ITableFilter[] = [
  {
    type: 'Enumeration',
    name: 'filter.status',
    param: 'statuses',
    label: 'filter.status',
    options: {
      pending: 'entity.transaction.status.pending',
      declined: 'entity.transaction.status.declined',
      processed: 'entity.transaction.status.processed',
      error: 'entity.transaction.status.error',
      rejected: 'entity.transaction.status.rejected',
    },
  },
  {
    type: 'Enumeration',
    name: 'filter.types',
    param: 'types',
    label: 'filter.types',
    options: {
      client_transaction_transfer: 'entity.transaction.type.client_transaction_transfer',
      client_transaction_split: 'entity.transaction.type.client_transaction_split',
      client_transaction_merge: 'entity.transaction.type.client_transaction_merge',
      client_transaction_issue: 'entity.transaction.type.client_transaction_issue',
      client_transaction_balance: 'entity.transaction.type.client_transaction_balance',
      client_transaction_redeem: 'entity.transaction.type.client_transaction_redeem',
      client_create_prepaid: 'entity.transaction.type.client_create_prepaid',
      client_charge_prepaid: 'entity.transaction.type.client_charge_prepaid',
      merchant_payment: 'entity.transaction.type.merchant_payment',
      merchant_invoice: 'entity.transaction.type.merchant_invoice',
      gate_charge: 'entity.transaction.type.gate_charge',
      gate_redeem: 'entity.transaction.type.gate_redeem',
      gate_purchase: 'entity.transaction.type.gate_purchase',
      gate_purchase_via_gate: 'entity.transaction.type.gate_purchase_via_gate',
      gate_card_refund: 'entity.transaction.type.gate_card_refund',
      gate_card_verification: 'entity.transaction.type.gate_card_verification',
      exchange_transaction: 'entity.transaction.type.exchange_transaction',
      cash_desk_redeem: 'entity.transaction.type.cash_desk_redeem',
      cash_desk_charge: 'entity.transaction.type.cash_desk_charge',
      payroll_charge: 'entity.transaction.type.payroll_charge',
      payroll_charge_sub: 'entity.transaction.type.payroll_charge_sub',
      reserve_charge: 'entity.transaction.type.reserve_charge',
      reserve_redeem: 'entity.transaction.type.reserve_redeem',
      cash_investment: 'entity.transaction.type.cash_investment',
      cash_collect: 'entity.transaction.type.cash_collect',
      cash_input: 'entity.transaction.type.cash_input',
      contract_transit: 'entity.transaction.type.contract_transit',
      merchant_cashback: 'entity.transaction.type.merchant_cashback',
      deposit_topup: 'entity.transaction.type.deposit_topup',
      deposit_profit_payment: 'entity.transaction.type.deposit_profit_payment',
      deposit_payout: 'entity.transaction.type.deposit_payout',
      deposit_capitalization: 'entity.transaction.type.deposit_capitalization',
      deposit_accruing: 'entity.transaction.type.deposit_accruing',
      credit_issue: 'entity.transaction.type.credit_issue',
      credit_payment: 'entity.transaction.type.credit_payment',
      bank_topup: 'entity.transaction.type.bank_topup',
      bank_redeem: 'entity.transaction.type.bank_redeem',
    },
  },
  {
    type: 'Date',
    name: 'filter.date_from',
    param: 'createdAtFrom',
    label: 'filter.created_at',
    range: {
      type: 'from',
      param: 'createdAtTo',
    },
    placeholder: 'placeholder.input.date_from',
  },
  {
    type: 'Date',
    name: 'filter.date_to',
    param: 'createdAtTo',
    range: {
      type: 'to',
      param: 'createdAtFrom',
    },
    placeholder: 'placeholder.input.date_to',
  },
  {
    type: 'Enumeration',
    name: 'filter.currency_code',
    param: 'currencyCodes',
    label: 'filter.currency_code',
    options: {},
  },
  {
    name: 'filter.wallet_number',
    type: 'Multiple',
    param: 'coinSerials',
    label: 'filter.wallet_number',
  },
  {
    name: 'filter.transaction_id',
    type: 'Multiple',
    param: 'ids',
    folded: true,
    label: 'filter.transaction_id',
  },
  {
    name: 'filter.issuer_id',
    type: 'Multiple',
    param: 'issuerIds',
    folded: true,
    label: 'filter.issuer_id',
  },
  {
    name: 'filter.payment_identifier',
    type: 'Multiple',
    param: 'paymentIdentifiers',
    folded: true,
    label: 'filter.payment_identifier',
  },
];
